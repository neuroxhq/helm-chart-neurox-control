{{- $annotations := include "neurox-control-api.annotations" . | fromYaml -}}
{{- $apiFullName := include "neurox-control-api.fullname" . -}}
{{- $apiPort := .Values.service.port -}}
{{- $hostPrimary := include "neurox-control-api.host.primary" . -}}
{{- $hostsAll := include "neurox-control-api.host.all" . | split "," -}}
{{- $ssoHeaders := include "neurox-control-api.sso.headers" . -}}
{{- $tlsSecretName := include "neurox-control-api.tlsSecretName" . -}}
{{- $useNeuroxIssuer := (and .Values.global.ingress.useNeuroxIssuer (include "neurox-control-api.useNeuroxDomain" .)) }}
---
# Default API ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ $apiFullName }}"
  annotations:
    nginx.ingress.kubernetes.io/auth-response-headers: "{{ $ssoHeaders }}"
    nginx.ingress.kubernetes.io/auth-signin: 'https://$http_host/sso/login?url=$scheme://$http_host$request_uri'
    nginx.ingress.kubernetes.io/auth-url: 'https://$http_host/sso/validate'
  {{- range $key, $value := $annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- if $useNeuroxIssuer }}
    cert-manager.io/issuer: "{{ .Values.global.ingress.issuerName }}"
  {{- end }}
spec:
  ingressClassName: "{{ .Values.global.ingress.className }}"
  rules:
    - host: {{ $hostPrimary }}
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: "{{ $apiFullName }}"
                port:
                  number: {{ $apiPort }}
  tls:
    - hosts:
      {{- range $hostsAll }}
        - {{ . }}
      {{- end }}
      secretName: "{{ $tlsSecretName }}"
---
# Ingress for handling workload cluster registration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ $apiFullName }}-cluster"
  annotations:
  {{- range $key, $value := $annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- if $useNeuroxIssuer }}
    cert-manager.io/issuer: "{{ .Values.global.ingress.issuerName }}"
  {{- end }}
spec:
  ingressClassName: "{{ .Values.global.ingress.className }}"
  rules:
  {{- range $hostsAll }}
    - host: {{ . }}
      http:
        paths:
          - path: /cluster/register
            pathType: Exact
            backend:
              service:
                name: "{{ $apiFullName }}"
                port:
                  number: {{ $apiPort }}
  {{- end }}
  tls:
    - hosts:
      {{- range $hostsAll }}
        - {{ . }}
      {{- end }}
      secretName: "{{ $tlsSecretName }}"
---
# Endpoints that cannot require authentication
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ $apiFullName }}-public"
  annotations:
  {{- range $key, $value := $annotations }}
    {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- if $useNeuroxIssuer }}
    cert-manager.io/issuer: "{{ .Values.global.ingress.issuerName }}"
  {{- end }}
spec:
  ingressClassName: "{{ .Values.global.ingress.className }}"
  rules:
    - host: {{ $hostPrimary }}
      http:
        paths:
          - path: /api/connect
            pathType: Prefix
            backend:
              service:
                name: "{{ $apiFullName }}"
                port:
                  number: {{ $apiPort }}
          - path: /api/signin-options
            pathType: Exact
            backend:
              service:
                name: "{{ $apiFullName }}"
                port:
                  number: {{ $apiPort }}
  tls:
    - hosts:
      {{- range $hostsAll }}
        - {{ . }}
      {{- end }}
      secretName: "{{ $tlsSecretName }}"
