{{- if and .Values.global.ingress.useNeuroxIssuer (include "neurox-control.useNeuroxDomain" . )}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-failed
    "helm.sh/hook-weight": "1"
  name: '{{ include "neurox-control.fullname" . }}-registration'
  namespace: "{{ .Release.Namespace }}"
data:
  default.conf: |
    server {
      listen 80;
      location /verify {
        default_type application/json;
        return 200 '{"domain": "{{ .Values.global.domain }}"}';
      }
    }
  deployment.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: '{{ include "neurox-control.fullname" . }}-registration'
      namespace: "{{ .Release.Namespace }}"
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: '{{ include "neurox-control.fullname" . }}-registration'
      template:
        metadata:
          labels:
            app: '{{ include "neurox-control.fullname" . }}-registration'
        spec:
        {{- if .Values.global.scheduling.affinity }}
          affinity: {{ toYaml .Values.global.scheduling.affinity | nindent 8 }}
        {{- end }}
          containers:
            - name: '{{ include "neurox-control.fullname" . }}-registration'
              image: "{{ .Values.register.image.nginx.repository }}:{{ .Values.register.image.nginx.tag }}"
              volumeMounts:
                - name: nginx-config
                  mountPath: /etc/nginx/conf.d
        {{- if .Values.global.scheduling.nodeSelector }}
          nodeSelector: {{ toYaml .Values.global.scheduling.nodeSelector | nindent 8 }}
        {{- end }}
        {{- if .Values.global.scheduling.tolerations }}
          tolerations: {{ toYaml .Values.global.scheduling.tolerations | nindent 8 }}
        {{- end }}
          volumes:
            - name: nginx-config
              configMap:
                name: '{{ include "neurox-control.fullname" . }}-registration'
                items:
                  - key: default.conf
                    path: default.conf
  ingress.yaml: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        "nginx.ingress.kubernetes.io/ssl-redirect": "false"
      name: '{{ include "neurox-control.fullname" . }}-registration'
      namespace: "{{ .Release.Namespace }}"
    spec:
      ingressClassName: "{{ .Values.global.ingress.className }}"
      rules:
        - http:
            paths:
              - path: /verify
                pathType: Exact
                backend:
                  service:
                    name: '{{ include "neurox-control.fullname" . }}-registration'
                    port:
                      number: {{ .Values.register.service.port }}
  service.yaml: |
    apiVersion: v1
    kind: Service
    metadata:
      name: '{{ include "neurox-control.fullname" . }}-registration'
      namespace: "{{ .Release.Namespace }}"
    spec:
      selector:
        app: '{{ include "neurox-control.fullname" . }}-registration'
      ports:
      - protocol: TCP
        port: {{ .Values.register.service.port }}
        targetPort: 80
      type: ClusterIP
{{- end }}
